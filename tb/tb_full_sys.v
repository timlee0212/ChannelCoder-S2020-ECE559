`timescale 1ns/1ps
module tb_full();
//Input Ports
reg clk, reset, wreq_tb, wreq_size;
reg[7:0] tb_in;

reg[11:0] tb_size_in;

//Output Ports
wire[7:0] xk_out, zk_out, zk_prime_out, d_cbs_out;
wire out_valid;

coder_stack_top_parallel test_obj(
	.clk(clk),
	.reset(reset), 
	.tb_in(tb_in), 
	.wreq_data(wreq_tb), 
	.tb_size_in(tb_size_in), 
	.wreq_size(wreq_size),
	.xk_out(xk_out), 
	.zk_out(zk_out), 
	.zk_prime_out(zk_prime_out),
	.out_valid(out_valid),
	.d_cbs_out(d_cbs_out)
);


integer length = 878;
integer iterations = 925, i, k;

/*
integer f_xk, f_zk, f_zk_p;

initial begin
	f_xk = $fopen("xk.txt", "w");
	f_zk = $fopen("zk.txt", "w");
	f_zk_p = $fopen("zk_p.txt", "w");
end
*/

wire[7023:0] input_vector = 7024'b

//Clock Generator
initial clk=1'b0;
always #5 clk=~clk;


/*
reg prev_out_valid;
always @(posedge clk) begin
	if (out_valid) begin
		$fwrite(f_xk, "%8b\n", xk_out);
		$fwrite(f_zk, "%8b\n", zk_out);
		$fwrite(f_zk_p, "%8b\n", zk_prime_out);
		prev_out_valid = out_valid;
	end
	else begin
		if (prev_out_valid) begin
			$fclose(f_xk);
			$fclose(f_zk);
			$fclose(f_zk_p);
			$stop();
		end
	end
end
*/

//Power-on Reset
initial
begin
		reset = 1'b1;
#20 	reset = 1'b0;
end


initial
begin	
	wreq_size = 1'b0;
	wreq_tb = 1'b0;
	tb_size_in = 16'h0;
	tb_in = 1'b0;
end

initial
begin
#50	wreq_size = 1'b1;
		tb_size_in = length;
#15	wreq_size = 1'b0;
#25	wreq_tb = 1'b1;
#5
	i = 0;
	k = -1;
	while (i < iterations)
	begin
		//#10 
		
		if (i < length) 
			tb_in = input_vector[i * 8 +: 8];
		else
			tb_in = 0;
		#10 i = i + 1;
	end
	wreq_tb = 1'b0;
end
endmodule
